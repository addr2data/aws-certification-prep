---
Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  SecurityGroupWebInstances:
    Value: !Ref SecurityGroupWebInstances
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupWebInstances'
  SecurityGroupLoadBalancer:
    Value: !Ref SecurityGroupLoadBalancer
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupLoadBalancer'
  SubnetPublic1:
    Value: !Ref SubnetPublic1
    Export:
      Name: !Sub '${AWS::StackName}-SubnetPublic1'
  SubnetPublic2:
    Value: !Ref SubnetPublic2
    Export:
      Name: !Sub '${AWS::StackName}-SubnetPublic2'
  SubnetPrivate1:
    Value: !Ref SubnetPrivate1
    Export:
      Name: !Sub '${AWS::StackName}-SubnetPrivate1'
  SubnetPrivate2:
    Value: !Ref SubnetPrivate2
    Export:
      Name: !Sub '${AWS::StackName}-SubnetPrivate2'
  
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: vpc_ex011
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: ig_ex011
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  SubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: subnet_public_1_ex011
      VpcId: !Ref VPC
  SubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: subnet_public_2_ex011
      VpcId: !Ref VPC
  SubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/24
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: subnet_private_1_ex011
      VpcId: !Ref VPC
  SubnetPrivate2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.129.0/24
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: subnet_private_2_ex011
      VpcId: !Ref VPC
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: rtb_public_ex011
  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: rtb_private_ex011
  AssociateRouteTablePublicSubnetPublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublic1
  AssociateRouteTablePublicSubnetPublic2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublic2
  AssociateRouteTablePrivateSubnetPrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref SubnetPrivate1
  AssociateRouteTablePrivateSubnetPrivate2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref SubnetPrivate2
  FloatingIpAddressInstance:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  NatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties: 
      AllocationId: !GetAtt FloatingIpAddressInstance.AllocationId
      SubnetId: !Ref SubnetPublic1
    DependsOn: DefaultRoutePublic
  DefaultRoutePublic:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTablePublic
    DependsOn: AttachInternetGateway
  DefaultRoutePrivate:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref RouteTablePrivate
    DependsOn: NatGateway
  SecurityGroupWebInstances:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: sg_web-instances_ex011
      GroupDescription: "Security Group for Web Instances in ex-011"
      SecurityGroupIngress:
        - 
          CidrIp: 10.0.0.0/16
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VPC
  SecurityGroupLoadBalancer:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: sg_load-balancer_ex011
      GroupDescription: "Security Group for Load balancer in ex-011"
      SecurityGroupIngress:
        - 
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VPC
...

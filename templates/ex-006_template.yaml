---
Parameters:
  KeyPairName:
    Type: String
    Default: acpkey1
    Description: Name of existing KeyPair

Mappings: 
  RegionMap: 
    us-east-1: 
      "64": "ami-a4dc46db"
    us-east-2: 
      "64": "ami-6a003c0f"
    us-west-1:
      "64": "ami-8d948ced"
    us-west-2:
      "64": "ami-db710fa3"
    ca-central-1:
      "64": "ami-7e21a11a"
    eu-west-1:
      "64": "ami-58d7e821"
    eu-west-2:
      "64": "ami-5daa463a"
    eu-west-3:
      "64": "ami-1960d164"
    eu-central-1:
      "64": "ami-c7e0c82c"
    ap-northeast-1:
      "64": "ami-48a45937"
    ap-northeast-2:
      "64": "ami-f030989e"
    ap-southeast-1:
      "64": "ami-81cefcfd"
    ap-southeast-2:
      "64": "ami-963cecf4"
    ap-south-1:
      "64": "ami-41e9c52e"
    sa-east-1:
      "64": "ami-67fca30b"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: vpc_ex006
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: ig_ex006
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  FloatingIpAddressNatGateway:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  NatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties: 
      AllocationId: !GetAtt FloatingIpAddressNatGateway.AllocationId
      SubnetId: !Ref PublicSubnet1
    DependsOn: DefaultRoutePublic
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: subnet_public1_ex006
      VpcId: !Ref VPC
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: subnet_public2_ex006
      VpcId: !Ref VPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/24
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: subnet_private1_ex006
      VpcId: !Ref VPC
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.129.0/24
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: subnet_private2_ex006
      VpcId: !Ref VPC
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: rtb_public_ex006
  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: rtb_private_ex006
  AssociateSubnetWeb1RouteTablePublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet1
  AssociateSubnetWeb1RouteTablePublic2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet2
  AssociateSubnetWeb1RouteTablePrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref PrivateSubnet1
  AssociateSubnetWeb1RouteTablePrivate2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref PrivateSubnet2
  DefaultRoutePublic:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTablePublic
    DependsOn: AttachInternetGateway
  DefaultRoutePrivate:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref RouteTablePrivate
    DependsOn: NatGateway
  SecurityGroupWebInstances:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: sg_webinstances_ex006
      GroupDescription: "Security Group for Web Instances."
      SecurityGroupIngress:
        - 
          CidrIp: 10.0.0.0/16
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VPC
  SecurityGroupLoadBalancer:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: sg_loadbalancer_ex006
      GroupDescription: "Security Group for Load balancer."
      SecurityGroupIngress:
        - 
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VPC
  WebInstance1:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", 64]
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds: 
        - !Ref SecurityGroupWebInstances
      SubnetId: !Ref PrivateSubnet1
      Tags: 
        - Key: Name
          Value: i_web1_ex006
      UserData: !Base64
        "Fn::Join":
          - "\n"
          -
            - "#!/bin/bash"
            - "sudo apt-get update"
            - "sudo apt-get dist-upgrade -y"
            - "sudo echo \"<html><body><h1>$(cat /etc/hostname)</h1></body></html>\" > index.html"
            - "sudo python3 -m http.server 80"
    DependsOn: DefaultRoutePrivate
  WebInstance2:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", 64]
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds: 
        - !Ref SecurityGroupWebInstances
      SubnetId: !Ref PrivateSubnet2
      Tags: 
        - Key: Name
          Value: i_web2_ex006
      UserData: !Base64
        "Fn::Join":
          - "\n"
          -
            - "#!/bin/bash"
            - "sudo apt-get update"
            - "sudo apt-get dist-upgrade -y"
            - "sudo echo \"<html><body><h1>$(cat /etc/hostname)</h1></body></html>\" > index.html"
            - "sudo python3 -m http.server 80"
    DependsOn: DefaultRoutePrivate
...

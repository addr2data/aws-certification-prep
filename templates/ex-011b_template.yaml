---
Parameters:
  KeyPairName:
    Type: String
    Default: acpkey1
    Description: Name of existing KeyPair
  StackName:
    Type: String
    Default: ex-011a
    Description: Name of previous stack
  UserData:
    Type: String
    Default: |
      #!/bin/bash
      sudo apt-get update
      sudo apt-get dist-upgrade -y
      sudo echo "<html><body><h1>$(cat /etc/hostname)</h1></body></html>" > index.html
      sudo python3 -m http.server 80
    Description: User Data

Mappings: 
  RegionMap: 
    us-east-1: 
      "64": "ami-a4dc46db"
    us-east-2: 
      "64": "ami-6a003c0f"
    us-west-1:
      "64": "ami-8d948ced"
    us-west-2:
      "64": "ami-db710fa3"
    ca-central-1:
      "64": "ami-7e21a11a"
    eu-west-1:
      "64": "ami-58d7e821"
    eu-west-2:
      "64": "ami-5daa463a"
    eu-west-3:
      "64": "ami-1960d164"
    eu-central-1:
      "64": "ami-c7e0c82c"
    ap-northeast-1:
      "64": "ami-48a45937"
    ap-northeast-2:
      "64": "ami-f030989e"
    ap-southeast-1:
      "64": "ami-81cefcfd"
    ap-southeast-2:
      "64": "ami-963cecf4"
    ap-south-1:
      "64": "ami-41e9c52e"
    sa-east-1:
      "64": "ami-67fca30b"

Resources:
  LaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateName: launch_template_ex011
      LaunchTemplateData:
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", 64]
        InstanceType: t2.micro
        KeyName: !Ref KeyPairName
        SecurityGroupIds: 
          - Fn::ImportValue:
              !Sub '${StackName}-SecurityGroupWebInstances'
        UserData: !Base64
          Ref: UserData
  AppLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: elb-app-ex011
      Scheme: internet-facing
      SecurityGroups:
        - Fn::ImportValue:
            !Sub '${StackName}-SecurityGroupLoadBalancer'
      Subnets:
        - Fn::ImportValue:
            !Sub '${StackName}-SubnetPublic1'
        - Fn::ImportValue:
            !Sub '${StackName}-SubnetPublic2'
      Type: application
      IpAddressType: ipv4
  WebServerTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: ex-011-tg-app-lb
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId:
        Fn::ImportValue:
            !Sub '${StackName}-VPC'
  WebServerListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties: 
      DefaultActions:
        -
          TargetGroupArn: !Ref WebServerTargetGroup
          Type: forward
      LoadBalancerArn: !Ref AppLoadBalancer
      Port: 80
      Protocol: HTTP
    DependsOn:
      - AppLoadBalancer
      - WebServerTargetGroup

...
